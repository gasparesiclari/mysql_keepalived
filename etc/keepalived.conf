! Configuration File for keepalived
##############################################################################################################################################
# This configuration needs 2 fails in order to change from current state to FAULT state and needs 2 success to change from BACKUP state to
# MASTER state.
#
# !!!MOST IMPORTANT!!!
# BEFORE keepalived can be started this file must be poperly edited (see HOW TO section below)
#
# HOW TO
# 1 - Check all the parameters of the script(s) in the "vrrp_script check_mysql" section below are correct
# 2 - unicast_src_ip (IP of the local machine) must be manually edited
# 3 - unicast_peer (IP of the other machine which ensures HA) must be manually edited
# NOTE: remember that, in case the vrtual IP is meant to be modified, in addition to change it into the whole configuration file, is also a
#       good practice to change router_id, vrrp_instance and virtual_router_id accordingly so that the id matches the last octet of the vip.
#
# START KEEPALIVED
# 1 - check mysql and keepalived service status, the output should be like these:
# [root@test-ha01 ~]# chkconfig --list|grep 'keepalived\|mysql'
# keepalived                            0:off   1:off   2:off   3:off   4:off   5:off   6:off
# mysql                                 0:off   1:off   2:on    3:on    4:on    5:on    6:off
# 2 - change service configuration in order to make keepalived start at machine start and mysql not
# [root@test-ha01 ~]# chkconfig --level 2345 keepalived on
# [root@test-ha01 ~]# chkconfig --level 2345 mysql off
# 3 - check service status, the output should be like this
# [root@test-ha01 ~]# chkconfig --list|grep 'keepalived\|mysql'
# keepalived                            0:off   1:off   2:on    3:on    4:on    5:on    6:off
# mysql                                 0:off   1:off   2:off   3:off   4:off   5:off   6:off
# 4 - start keepalived service
#
##############################################################################################################################################
global_defs {
   notification_email {
        email@yourdomain.com
}
   #smtp_server smt.yourdomain.com
   #smtp_connect_timeout 30
## The $ID is a unique number, the logic is that this value is the last number in the VIP.
   router_id 1
   debug
}
vrrp_script mysql {
#   script "/usr/local/vbin/keepalived/keepalived_mysql_check.sh $VIP $INTERFACE $INTERFACE_ALIAS
   script "/usr/local/vbin/keepalived/keepalived_mysql_check.sh 10.10.10.1 eth0 dbvip"
   interval 30  # checks every 30 seconds
   fall 2       # requires 2 failures for KO
   rise 2       # requires successes for OK switch
}
## The $ID is a unique number, the logic is that this value is the last number in the VIP.
vrrp_instance dbvip_1 {
    virtual_router_id 1
## MASTER : the master instance
## BACKUP : the fail-over instance
    state BACKUP|MASTER
#    interface $INTERFACE
    interface eth0
    priority  100
    advert_int 1
    nopreempt
#    unicast_src_ip xx.xx.xx.xx #IP Address of local machine. NOTE: this is mandatory since in LUMATA network multicast is forbidden
    unicast_src_ip 10.10.10.2
    unicast_peer {
#       xx.xx.xx.xx #IP Address of other machine(s). NOTE1: this is mandatory since in LUMATA network multicast is forbidden. NOTE2: multiple values can be issued here
       10.10.10.3
    }
    authentication {
        auth_type AH
        auth_pass PASSWORD
    }
    track_script {
        mysql
    }
    virtual_ipaddress {
#       $VIP dev $INTERFACE label $INTERFACE:$INTERFACE_ALIAS
        10.10.10.1 dev eth0 label eth0:pg
    }
# notify_master "/usr/local/vbin/keepalived/keepalived_notif.sh MASTER $VIP"
notify_master "/usr/local/vbin/keepalived/keepalived_notif.sh MASTER 10.10.10.1"
# notify_backup "/usr/local/vbin/keepalived/keepalived_notif.sh BACKUP $VIP"
notify_backup "/usr/local/vbin/keepalived/keepalived_notif.sh BACKUP 10.10.10.1"
# notify_fault "/usr/local/vbin/keepalived/keepalived_notif.sh FAULT $VIP"
notify_fault "/usr/local/vbin/keepalived/keepalived_notif.sh FAULT 10.10.10.1"